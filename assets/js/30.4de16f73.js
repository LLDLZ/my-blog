(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{446:function(a,t,e){"use strict";e.r(t);var s=e(2),r=Object(s.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"node-cli-tree-的使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#node-cli-tree-的使用"}},[a._v("#")]),a._v(" node-cli-tree 的使用")]),a._v(" "),t("h2",{attrs:{id:"安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[a._v("#")]),a._v(" 安装")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("npm")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-g")]),a._v(" tree-node-cli\n")])])]),t("h2",{attrs:{id:"使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[a._v("#")]),a._v(" 使用")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 生成当前文件夹所有结构")]),a._v("\ntreee\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 生成 2 级文件结构")]),a._v("\ntreee "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-L")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 生成所有文件 包括隐藏文件")]),a._v("\ntreee "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-a")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 排除文件目录")]),a._v("\ntreee "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-I")]),a._v(" node_modules\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);